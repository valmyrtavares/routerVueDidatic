Esse é um projeto com mais elementos que deve me colocar em uma condição
melhor de entender o processo de criação do vue. Eu fia com o vue create nomeprojeto
E escolhi que o router seja incluso no processo. Ele faz uma pasta router com um index dentro.
Eu tentei mudar para que ficasse igual ao do tutorial mas tomei muitos erros e resolvi deixar como
estava. Fiz duas páginas e um componente, sempre lembrando que página é uma entidade mais completa que 
componente que pode ser apenas um acessório da página. Fiz um compoente TheHeader, o nome segue
o que foi feito no tutorial, eu mesmo não daria esse nome, e o importei ele dentro do App.

Um ponto importante a se destacar aqui é o processo diferente para importar um componente dentro
do outro e o processo de usar um router para mostrar uma página diferente. A diferencça entre essas
duas manobras é um essencial para acelerar o processo de entendimento das ferramenta. 

Por enquanto é isso um projeto em fase inicial para o nosso primeiro commit

Eu dei uma breve estilizada no componente header com o style scoped, nada demais e o sites
está com aquela cara de site, mostrando as páginas muito didático até aqui

Tive uma daquelas aulas do destino. Eu coloquei uma variável estarnha dentro do componente contato
que eu nem estava usando direito e ele deu um erro loko. O router funcionava 3 vezes e parava
mudava o url mas não mudava a pasta, precisei usar todas as minhas habilidades de progrmador pra achar
a porra do erro. Não é perda de tempo é ganho de musculatura. Tudo bem.
E ai depois foi a hora da home que não aparecia. Dizia que alguma coisa não estava registrada direito
com o componente. Mas infelizmente esse eu não consegui achar o erro. Voltou a funcionar sem eu achar onde
estava o erro. Infelizmente. Quero comitar agora com tudo funciondo. Depois de tomar muitos erros a gente 
fica sensível. 

COMMIT REAL
Eu acho que não comitei o texto antenrior. Então esse aqui é sobre os mixins, são compatíveis aos models, 
arquivos que exportam e trazem dados para o site. É um js com uma função que com ajuda de um parametro
traz da api falsa os dados para o site.vue. Eu tive problemas com a falta de um this, dentro do cursos,
nada demais porém importante para poder progredir. Acho que somente vendo o commit já da pra ter uma boa
ideia de como a banda toca.

Nesse commit foi feito o componente de lodingPage bem interessante o jeito de se criar. Nada de vue só css mesmo
e exatamente por isso eu coloquei no adianto css

Eu acho que vale a pena fazer um commit aqui somente sobre a forma de se fazer transição com o vue e essa variação
interessante sobre css de componente e css global. Isso é de fato muito interessante. 

Estilizamos a home variando entre classes globais e locais. Eu até pararai aqui, mas tenho de memória que ainda tem 
uma parte de router interessante para passar.

Ainda antes dessa parte muito interessante para entrar estilizamos o contato e o cursos, e já abrimos um novo
arquivo curso que ainda está cru. E agora vamo entrar na parte de rota filho, que é um assunto que ficou 
um tanto obscuro pra mim. Por isso acho que é uma boa ideia dar um commit aqui

Aqui tem um ponto que deu um nó na minha cabeça. Que é a linha 13 de /Cursos. Dentro do cursos eu chamo
o singular, curso. Que é uma página também, mas só que ela mostra conteúdo dinamico, ou seja, ela é carregada
com diferentes conteúdoS de cada curso. A página curso é só uma plataforma que será carregada com seja lá o que for.
Essa não é uma ideia nova. Eu já fiz isso outras vezes, mas parece que não foi o suficiente ou foi mas aqui me parece
amazing. Quando em php eu mostro um modal com cada produto do meu menu, eu mostro um modal ou uma página que cada hora
será uma, será o que o cliente clicar. Não é nada muito novo. Ok. Mas aqui a partir do link que é posto dentro da página
cursos eu clico e levo o curso.id e injeto dentro da página curso através de uma props

Importante enfatizar aqui que quem tem pros: true é o curso dentro do router. Dentro do curso ele tem uma props curso
declarada, que no final só serve como parametro para entra dentro das api e buscar o conteúdo. Na parte do template
quem é trazido é a api, como sempre, com toda a estrutura que já usei antes. pageLoading e tudo mais
Nesse momento está tudo funcionando a contento e acho que é um bom momento para fazer outro commit. Temos uma página curso
que de forma programática traz conteúdos da api para ser usado dentro dela

Acho que é importante frisar que router-view é a ferramenta que o vue dispõe para que um conteúdo possa ser mostrado dentro
de outro componente, ou seja, tudo que foi feito até agora foi mostrado dentro de app, com chaveamentos mil
Home aparece dentro de app, contato também, cursos também, lembrando que a pagina cursos é somente um indice de nomes
clicávies. O curso se fato aparece somente depois de vc clicar no nome do curso que está dentro de cursos. Mas até 
a página curso também abre dentro de app. Tudo está dentro de app , porque somente app tem o router-view. EU estou
frisando isso nesse momento porque é agora que vamos quebrar essa regra, fazendo que conteúdos compartilhem outra
view que também está dentro de app. No próximo commit nós vamos compartilhar a página curso para mostrar as aulas do curso
As aulas do curso serão mostradas dentro da página curso. Aqui nós fizemos somente uma breve estilização do curso e 
da mesma forma que foi feito dentro de cursos, vamos transformar cada aula em um link, com a diferença de que ela 
não nos levará para outra página. Cada aula será mostrada dentro da página curso